#+begin_export latex
\section{Bug in \ty{prepAlfy}}
We are missing matches, here is a minimal example: As query, $q$, we
use one sequence of 70 nucleotides in the file
\begin{verbatim}
../data/bugQuery2/q.fa
\end{verbatim}
Our subjects are two full HIV genomes called $a$ and $b$ in the
directory
\begin{verbatim}
../data/sbjectBug2
\end{verbatim}
We run \ty{prepAlfy} and get at zero-based position 8 a match of 41
bases in $a$.
#+end_export
#+begin_src sh <<pab.sh>>=
  ../bin/prepAlfy -n \
		  -q ../data/bugQuery2 \
		  -s ../data/bugSbjct2
#+end_src
#+begin_export latex
\begin{verbatim}
#q
>A+DQ083238 106..175
0	4	9	b
5	7	7	a,b
8	9	41	a
10	47	39	b,a
48	49	6	a,b
50	54	7	b
55	56	8	b
57	57	7	a
58	62	7	b
63	63	7	a
64	69	6	b,a
\end{verbatim}
However, that match, $m$, exists both in $a$ and $b$. To see this, we
first cut it out and store it in file \ty{m.fa}.
#+end_export
#+begin_src sh <<pab.sh>>=
  cutSeq -r 9-49 ../data/bugQuery2/q.fasta > m.fa
#+end_src
#+begin_export latex
When we search for $m$ in $a$ and $b$, we find a hit in both.
#+end_export
#+begin_src sh <<pab.sh>>=
  keyMat -p m.fa ../data/bugSbjct2/*
#+end_src
#+begin_export latex
\begin{verbatim}
# a
8404	q 9..49
# b
8560	q 9..49
\end{verbatim}
So the question is, why does \ty{prepAlfy} annotate that position only
for $a$? To check whether this error is made during interval
construction, we print the table from which the intervals are
constructed using the \ty{-r} switch for raw output. We now see that
at position 8---and 9, too---only a match in $a$ is found. So the
problem is prior to interval construction.
#+end_export
#+begin_src sh <<pab.sh>>=
  ../bin/prepAlfy -n \
		  -q ../data/bugQuery2 \
		  -s ../data/bugSbjct2 \
		  -r
#+end_src
#+begin_export latex
\begin{verbatim}
 #q
>q
0 9 [1]
1 8 [1]
2 7 [1]
3 6 [1]
4 5 [1]
5 7 [0 1]
6 6 [0 1]
7 5 [0 1]
8 41 [0]
9 40 [0]
10 39 [0 1]
11 38 [0 1]
12 37 [0 1]
...
\end{verbatim}
#+end_export
#+begin_export latex
Next, we check whether the match at position 8 is missed as a result
of skipping beyond the previous match. So we switch to the default
skipping mode to stepping through all possible match starts using
\ty{-S}. Now we position 8 is annotated with subjects $a$ and $b$, so
the skipping is the culprit.
#+end_export
#+begin_src sh <<pab.sh>>=
  ../bin/prepAlfy -n \
		  -q ../data/bugQuery2 \
		  -s ../data/bugSbjct2 \
		  -r \
		  -S
#+end_src
#+begin_export latex
\begin{verbatim}
#q
>q
0 9 [1]
1 9 [0]
2 8 [0]
3 7 [0 1]
4 7 [0 1]
5 7 [0 1]
6 7 [0 1]
7 7 [0 1]
8 41 [0 1]
9 40 [0 1]
10 39 [0 1]
...
\end{verbatim}
#+end_export
#+begin_export latex
In stepping mode we also get the correct annotation of the interval
starting at position 8. However, now we see that we should have an
interval 3--7, where we get five separate intervals. So the interval
computation needs to be looked into next.
#+end_export
#+begin_src sh  <<pab.sh>>=
  ../bin/prepAlfy -n \
		  -q ../data/bugQuery2 \
		  -s ../data/bugSbjct2 \
		  -S
#+end_src
#+begin_export latex
\begin{verbatim}
#q
>q
0	0	9	b
1	2	9	a
3	3	7	a,b
4	4	7	a,b
5	5	7	a,b
6	6	7	a,b
7	7	7	a,b
8	42	41	a,b
43	43	7	b
44	45	7	a,b
46	46	6	a,b
47	47	6	a,b
...
\end{verbatim}
#+end_export
